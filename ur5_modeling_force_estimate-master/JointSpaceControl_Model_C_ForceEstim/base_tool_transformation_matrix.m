function [ T ] = base_tool_transformation_matrix(theta)
%BaseToolTransformationMatrix - Transformationmatrix from Base to Tool
%  Calculates the Base-Tool Transformation matrix based on the current
%  joint positions.

theta1 = theta(1);
theta2 = theta(2);
theta3 = theta(3);
theta4 = theta(4);
theta5 = theta(5);
theta6 = theta(6);


T = [(((cos(theta1) * cos(theta2) * cos(theta3) - cos(theta1) * sin(theta2) ...
    * sin(theta3)) * cos(theta4) + (-cos(theta1) * cos(theta2) * sin(theta3) ...
    - cos(theta1) * sin(theta2) * cos(theta3)) * sin(theta4)) * cos(theta5) ...
    + sin(theta1) * sin(theta5)) * cos(theta6) + (-(cos(theta1) * cos(theta2) ...
    * cos(theta3) - cos(theta1) * sin(theta2) * sin(theta3)) * sin(theta4) + ...
    (-cos(theta1) * cos(theta2) * sin(theta3) - cos(theta1) * sin(theta2) * ...
    cos(theta3)) * cos(theta4)) * sin(theta6) -(((cos(theta1) * cos(theta2) * ...
    cos(theta3) - cos(theta1) * sin(theta2) * sin(theta3)) * cos(theta4) + ...
    (-cos(theta1) * cos(theta2) * sin(theta3) - cos(theta1) * sin(theta2) * ...
    cos(theta3)) * sin(theta4)) * cos(theta5) + sin(theta1) * sin(theta5)) * ...
    sin(theta6) + (-(cos(theta1) * cos(theta2) * cos(theta3) - cos(theta1) * ...
    sin(theta2) * sin(theta3)) * sin(theta4) + (-cos(theta1) * cos(theta2) * ...
    sin(theta3) - cos(theta1) * sin(theta2) * cos(theta3)) * cos(theta4)) * ...
    cos(theta6) -((cos(theta1) * cos(theta2) * cos(theta3) - cos(theta1) * ...
    sin(theta2) * sin(theta3)) * cos(theta4) + (-cos(theta1) * cos(theta2) * ...
    sin(theta3) - cos(theta1) * sin(theta2) * cos(theta3)) * sin(theta4)) * ...
    sin(theta5) + sin(theta1) * cos(theta5) -0.082 * ((cos(theta1) * ...
    cos(theta2) * cos(theta3) - cos(theta1) * sin(theta2) * sin(theta3)) * ...
    cos(theta4) + (-cos(theta1) * cos(theta2) * sin(theta3) - cos(theta1) * ...
    sin(theta2) * cos(theta3)) * sin(theta4)) * sin(theta5) + 0.082 * ...
    sin(theta1) * cos(theta5) + 0.093 * (cos(theta1) * cos(theta2) * ...
    cos(theta3) - cos(theta1) * sin(theta2) * sin(theta3)) * sin(theta4) - ...
    0.093 * (-cos(theta1) * cos(theta2) * sin(theta3) - cos(theta1) * ...
    sin(theta2) * cos(theta3)) * cos(theta4) + 0.109 * sin(theta1) - ...
    0.39243 * cos(theta1) * cos(theta2) * cos(theta3) + 0.39243 * ...
    cos(theta1) * sin(theta2) * sin(theta3) - 0.425 * cos(theta1) * cos(theta2); ...
    (((sin(theta1) * cos(theta2) * cos(theta3) - sin(theta1) * sin(theta2) * ...
    sin(theta3)) * cos(theta4) + (-sin(theta1) * cos(theta2) * sin(theta3) - ...
    sin(theta1) * sin(theta2) * cos(theta3)) * sin(theta4)) * cos(theta5) - ...
    cos(theta1) * sin(theta5)) * cos(theta6) + (-(sin(theta1) * cos(theta2) * ...
    cos(theta3) - sin(theta1) * sin(theta2) * sin(theta3)) * sin(theta4) + ...
    (-sin(theta1) * cos(theta2) * sin(theta3) - sin(theta1) * sin(theta2) * ...
    cos(theta3)) * cos(theta4)) * sin(theta6) -(((sin(theta1) * cos(theta2) *...
    cos(theta3) - sin(theta1) * sin(theta2) * sin(theta3)) * cos(theta4) + ...
    (-sin(theta1) * cos(theta2) * sin(theta3) - sin(theta1) * sin(theta2) * ...
    cos(theta3)) * sin(theta4)) * cos(theta5) - cos(theta1) * sin(theta5)) * ...
    sin(theta6) + (-(sin(theta1) * cos(theta2) * cos(theta3) - sin(theta1) * ...
    sin(theta2) * sin(theta3)) * sin(theta4) + (-sin(theta1) * cos(theta2) * ...
    sin(theta3) - sin(theta1) * sin(theta2) * cos(theta3)) * cos(theta4)) * ...
    cos(theta6) -((sin(theta1) * cos(theta2) * cos(theta3) - sin(theta1) * ...
    sin(theta2) * sin(theta3)) * cos(theta4) + (-sin(theta1) * cos(theta2) * ...
    sin(theta3) - sin(theta1) * sin(theta2) * cos(theta3)) * sin(theta4)) *...
     sin(theta5) - cos(theta1) * cos(theta5) -0.082 * ((sin(theta1) * ...
    cos(theta2) * cos(theta3) - sin(theta1) * sin(theta2) * sin(theta3)) * ...
    cos(theta4) + (-sin(theta1) * cos(theta2) * sin(theta3) - sin(theta1) * ...
    sin(theta2) * cos(theta3)) * sin(theta4)) * sin(theta5) - 0.082 * ...
    cos(theta1) * cos(theta5) + 0.093 * (sin(theta1) * cos(theta2) * ...
    cos(theta3) - sin(theta1) * sin(theta2) * sin(theta3)) * sin(theta4) - ...
    0.093 * (-sin(theta1) * cos(theta2) * sin(theta3) - sin(theta1) * ...
    sin(theta2) * cos(theta3)) * cos(theta4) - 0.109 * cos(theta1) - ...
    0.39243 * sin(theta1) * cos(theta2) * cos(theta3) + 0.39243 * ...
    sin(theta1) * sin(theta2) * sin(theta3) - 0.425 * sin(theta1) * ...
    cos(theta2); ((sin(theta2) * cos(theta3) + cos(theta2) * sin(theta3)) ...
    * cos(theta4) + (-sin(theta2) * sin(theta3) + cos(theta2) * cos(theta3)) ...
    * sin(theta4)) * cos(theta5) * cos(theta6) + (-(sin(theta2) * cos(theta3) ...
    + cos(theta2) * sin(theta3)) * sin(theta4) + (-sin(theta2) * sin(theta3) ...
    + cos(theta2) * cos(theta3)) * cos(theta4)) * sin(theta6) -((sin(theta2) ...
    * cos(theta3) + cos(theta2) * sin(theta3)) * cos(theta4) + (-sin(theta2) ...
    * sin(theta3) + cos(theta2) * cos(theta3)) * sin(theta4)) * cos(theta5) ...
    * sin(theta6) + (-(sin(theta2) * cos(theta3) + cos(theta2) * sin(theta3)) ...
    * sin(theta4) + (-sin(theta2) * sin(theta3) + cos(theta2) * cos(theta3)) ...
    * cos(theta4)) * cos(theta6) -((sin(theta2) * cos(theta3) + cos(theta2) ...
    * sin(theta3)) * cos(theta4) + (-sin(theta2) * sin(theta3) + cos(theta2) ...
    * cos(theta3)) * sin(theta4)) * sin(theta5) 0.0892 - 0.082 * ...
    ((sin(theta2) * cos(theta3) + cos(theta2) * sin(theta3)) * cos(theta4) ...
    + (-sin(theta2) * sin(theta3) + cos(theta2) * cos(theta3)) * sin(theta4)) ...
    * sin(theta5) + 0.093 * (sin(theta2) * cos(theta3) + cos(theta2) * ...
    sin(theta3)) * sin(theta4) - 0.093 * (-sin(theta2) * sin(theta3) + ...
    cos(theta2) * cos(theta3)) * cos(theta4) - 0.39243 * sin(theta2) * ...
    cos(theta3) - 0.39243 * cos(theta2) * sin(theta3) - 0.425 * sin(theta2); ...
    0 0 0 1;];

end

